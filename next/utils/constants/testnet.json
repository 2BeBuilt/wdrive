[
  {
    "name": "Ethereum",
    "chainId": 5,
    "rpc": "https://goerli.infura.io/v3/a4812158fbab4a2aaa849e6f4a6dc605",
    "gateway": "0xe432150cce91c13a887f7D836923d5597adD8E31",
    "constAddressDeployer": "0x98b2920d53612483f91f12ed7754e51b4a77919e",
    "tokenName": "Ether",
    "tokenSymbol": "ETH",
    "gasReceiver": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6",
    "AxelarGasService": {
      "address": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6"
    },
    "AxelarDepositService": {
      "salt": "AxelarDepositService",
      "address": "0xc1DCb196BA862B337Aa23eDA1Cb9503C0801b955",
      "implementation": "0xb6241272C569767072e0587098415DF6BA0aaEe9",
      "deployer": "0xd55cd98cdE61c3CcE1286F9aF50cDbF16f5dba5b",
      "wrappedSymbol": "WETH",
      "refundIssuer": "0x4f671f34d2d23fec3eE3087E3A0221f8D314D9dF"
    },
    "GMPExpressService": {
      "expressOperator": "0xB8Cd93C83A974649D76B1c19f311f639e62272BC",
      "proxyDeployer": "0x60252bf6992e492DEa5f3e02e6611a5C757De690",
      "salt": "GMPExpressService",
      "address": "0xfb72239394647e97894585D0D93Ca91f6C3852a4",
      "implementation": "0xAECa4B03Da727f8d782c109E3D3854116fB32e78",
      "deployer": "0xA57ADCE1d2fE72949E4308867D894CD7E7DE0ef2"
    },
    "gasService": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6",
    "contract": {
      "abi": [
        "constructor(address gateway_, address gasReceiver_, string chainName_, uint256 chainId_)",
        "error InvalidAddress()",
        "error NotApprovedByGateway()",
        "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
        "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
        "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
        "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
        "function approve(address to, uint256 tokenId)",
        "function balanceOf(address owner) view returns (uint256)",
        "function chainId() view returns (uint256)",
        "function chainName() view returns (string)",
        "function connectNFTs(string destinationChain, string destinationAddress) payable",
        "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
        "function executeWithToken(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload, string tokenSymbol, uint256 amount)",
        "function gasService() view returns (address)",
        "function gateway() view returns (address)",
        "function getApproved(uint256 tokenId) view returns (address)",
        "function isApprovedForAll(address owner, address operator) view returns (bool)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function ownerOf(uint256 tokenId) view returns (address)",
        "function remoteAddress() view returns (string)",
        "function remoteChain() view returns (string)",
        "function renounceOwnership()",
        "function safeMint(address to)",
        "function safeTransferFrom(address from, address to, uint256 tokenId)",
        "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
        "function safeWarp()",
        "function setApprovalForAll(address operator, bool approved)",
        "function supportsInterface(bytes4 interfaceId) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI(uint256 tokenId) view returns (string)",
        "function transferFrom(address from, address to, uint256 tokenId)",
        "function transferOwnership(address newOwner)",
        "function update(string newURI, uint256 token) payable",
        "function value() view returns (string)"
      ],
      "address": "0xa52BCD138eB0Ee2C9DacA07D3Fe3fbbd9535dd4a"
    }
  },
  {
    "name": "Avalanche",
    "chainId": 43113,
    "rpc": "https://api.avax-test.network/ext/bc/C/rpc",
    "gateway": "0xC249632c2D40b9001FE907806902f63038B737Ab",
    "constAddressDeployer": "0x98b2920d53612483f91f12ed7754e51b4a77919e",
    "tokenName": "Avax",
    "tokenSymbol": "AVAX",
    "gasReceiver": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6",
    "AxelarGasService": {
      "address": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6"
    },
    "AxelarDepositService": {
      "salt": "AxelarDepositService",
      "address": "0xc1DCb196BA862B337Aa23eDA1Cb9503C0801b955",
      "implementation": "0xb6241272C569767072e0587098415DF6BA0aaEe9",
      "deployer": "0xd55cd98cdE61c3CcE1286F9aF50cDbF16f5dba5b",
      "wrappedSymbol": "WAVAX",
      "refundIssuer": "0x4f671f34d2d23fec3eE3087E3A0221f8D314D9dF"
    },
    "GMPExpressService": {
      "expressOperator": "0xB8Cd93C83A974649D76B1c19f311f639e62272BC",
      "salt": "GMPExpressService",
      "address": "0xfb72239394647e97894585D0D93Ca91f6C3852a4",
      "implementation": "0xF58665C20eA439f1ae065ff218aC13d3f9B29F6A",
      "deployer": "0xA57ADCE1d2fE72949E4308867D894CD7E7DE0ef2",
      "proxyDeployer": "0xB9A86a733b55804d60cd0CbED3bCEeC96ae8B5Aa"
    },
    "gasService": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6",
    "contract": {
      "abi": [
        "constructor(address gateway_, address gasReceiver_, string chainName_, uint256 chainId_)",
        "error InvalidAddress()",
        "error NotApprovedByGateway()",
        "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
        "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
        "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
        "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
        "function approve(address to, uint256 tokenId)",
        "function balanceOf(address owner) view returns (uint256)",
        "function chainId() view returns (uint256)",
        "function chainName() view returns (string)",
        "function connectNFTs(string destinationChain, string destinationAddress) payable",
        "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
        "function executeWithToken(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload, string tokenSymbol, uint256 amount)",
        "function gasService() view returns (address)",
        "function gateway() view returns (address)",
        "function getApproved(uint256 tokenId) view returns (address)",
        "function isApprovedForAll(address owner, address operator) view returns (bool)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function ownerOf(uint256 tokenId) view returns (address)",
        "function remoteAddress() view returns (string)",
        "function remoteChain() view returns (string)",
        "function renounceOwnership()",
        "function safeMint(address to)",
        "function safeTransferFrom(address from, address to, uint256 tokenId)",
        "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
        "function safeWarp()",
        "function setApprovalForAll(address operator, bool approved)",
        "function supportsInterface(bytes4 interfaceId) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI(uint256 tokenId) view returns (string)",
        "function transferFrom(address from, address to, uint256 tokenId)",
        "function transferOwnership(address newOwner)",
        "function update(string newURI, uint256 token) payable",
        "function value() view returns (string)"
      ],
      "address": "0x1D993E0AAeA270A54872f0E466f46B33C247c633"
    }
  },
  {
    "name": "Polygon",
    "chainId": 80001,
    "gateway": "0xBF62ef1486468a6bd26Dd669C06db43dEd5B849B",
    "rpc": "https://polygon-mumbai.g.alchemy.com/v2/Ksd4J1QVWaOJAJJNbr_nzTcJBJU-6uP3",
    "constAddressDeployer": "0x98b2920d53612483f91f12ed7754e51b4a77919e",
    "tokenName": "Matic",
    "tokenSymbol": "MATIC",
    "gasReceiver": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6",
    "AxelarGasService": {
      "address": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6"
    },
    "AxelarDepositService": {
      "salt": "AxelarDepositService",
      "address": "0xc1DCb196BA862B337Aa23eDA1Cb9503C0801b955",
      "implementation": "0xb6241272C569767072e0587098415DF6BA0aaEe9",
      "deployer": "0xd55cd98cdE61c3CcE1286F9aF50cDbF16f5dba5b",
      "wrappedSymbol": "WMATIC",
      "refundIssuer": "0x4f671f34d2d23fec3eE3087E3A0221f8D314D9dF"
    },
    "GMPExpressService": {
      "expressOperator": "0xB8Cd93C83A974649D76B1c19f311f639e62272BC",
      "proxyDeployer": "0xDCc3B94C9fbAE6BC8bc997ed2fC1a3A40E6F3750",
      "salt": "GMPExpressService",
      "address": "0xfb72239394647e97894585D0D93Ca91f6C3852a4",
      "implementation": "0x2242B16222F0a459fE3E0626Df6fdf7975cC2eb2",
      "deployer": "0xA57ADCE1d2fE72949E4308867D894CD7E7DE0ef2"
    },
    "gasOptions": {
      "gasLimit": 6000000
    },
    "gasService": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6",
    "contract": {
      "abi": [
        "constructor(address gateway_, address gasReceiver_, string chainName_, uint256 chainId_)",
        "error InvalidAddress()",
        "error NotApprovedByGateway()",
        "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
        "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
        "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
        "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
        "function approve(address to, uint256 tokenId)",
        "function balanceOf(address owner) view returns (uint256)",
        "function chainId() view returns (uint256)",
        "function chainName() view returns (string)",
        "function connectNFTs(string destinationChain, string destinationAddress) payable",
        "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
        "function executeWithToken(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload, string tokenSymbol, uint256 amount)",
        "function gasService() view returns (address)",
        "function gateway() view returns (address)",
        "function getApproved(uint256 tokenId) view returns (address)",
        "function isApprovedForAll(address owner, address operator) view returns (bool)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function ownerOf(uint256 tokenId) view returns (address)",
        "function remoteAddress() view returns (string)",
        "function remoteChain() view returns (string)",
        "function renounceOwnership()",
        "function safeMint(address to)",
        "function safeTransferFrom(address from, address to, uint256 tokenId)",
        "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
        "function safeWarp()",
        "function setApprovalForAll(address operator, bool approved)",
        "function supportsInterface(bytes4 interfaceId) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI(uint256 tokenId) view returns (string)",
        "function transferFrom(address from, address to, uint256 tokenId)",
        "function transferOwnership(address newOwner)",
        "function update(string newURI, uint256 token) payable",
        "function value() view returns (string)"
      ],
      "address": "0x99A9dDAD61884E16E9Df5D7835F585b85700bF64"
    }
  },
  {
    "name": "Binance",
    "chainId": 97,
    "gateway": "0x4D147dCb984e6affEEC47e44293DA442580A3Ec0",
    "rpc": "https://data-seed-prebsc-2-s3.binance.org:8545",
    "constAddressDeployer": "0x98b2920d53612483f91f12ed7754e51b4a77919e",
    "tokenName": "Binance Coin",
    "tokenSymbol": "BNB",
    "gasReceiver": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6",
    "AxelarGasService": {
      "address": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6"
    },
    "AxelarDepositService": {
      "salt": "AxelarDepositService",
      "address": "0xc1DCb196BA862B337Aa23eDA1Cb9503C0801b955",
      "implementation": "0xb6241272C569767072e0587098415DF6BA0aaEe9",
      "deployer": "0xd55cd98cdE61c3CcE1286F9aF50cDbF16f5dba5b",
      "wrappedSymbol": "WBNB",
      "refundIssuer": "0x4f671f34d2d23fec3eE3087E3A0221f8D314D9dF"
    },
    "GMPExpressService": {
      "expressOperator": "0xB8Cd93C83A974649D76B1c19f311f639e62272BC",
      "proxyDeployer": "0xA04bFB74786089f0451f09437947B83F02e4e823",
      "salt": "GMPExpressService",
      "address": "0xfb72239394647e97894585D0D93Ca91f6C3852a4",
      "implementation": "0x3eE29e10eFcab717c94db855Bb1b246b71a82078",
      "deployer": "0xA57ADCE1d2fE72949E4308867D894CD7E7DE0ef2"
    },
    "gasService": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6",
    "contract": {
      "abi": [
        "constructor(address gateway_, address gasReceiver_, string chainName_, uint256 chainId_)",
        "error InvalidAddress()",
        "error NotApprovedByGateway()",
        "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
        "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
        "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
        "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
        "function approve(address to, uint256 tokenId)",
        "function balanceOf(address owner) view returns (uint256)",
        "function chainId() view returns (uint256)",
        "function chainName() view returns (string)",
        "function connectNFTs(string destinationChain, string destinationAddress) payable",
        "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
        "function executeWithToken(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload, string tokenSymbol, uint256 amount)",
        "function gasService() view returns (address)",
        "function gateway() view returns (address)",
        "function getApproved(uint256 tokenId) view returns (address)",
        "function isApprovedForAll(address owner, address operator) view returns (bool)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function ownerOf(uint256 tokenId) view returns (address)",
        "function remoteAddress() view returns (string)",
        "function remoteChain() view returns (string)",
        "function renounceOwnership()",
        "function safeMint(address to)",
        "function safeTransferFrom(address from, address to, uint256 tokenId)",
        "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
        "function safeWarp()",
        "function setApprovalForAll(address operator, bool approved)",
        "function supportsInterface(bytes4 interfaceId) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI(uint256 tokenId) view returns (string)",
        "function transferFrom(address from, address to, uint256 tokenId)",
        "function transferOwnership(address newOwner)",
        "function update(string newURI, uint256 token) payable",
        "function value() view returns (string)"
      ],
      "address": "0x677476aD723531a4d813900aD6624101Ac9129e8"
    }
  }
]
